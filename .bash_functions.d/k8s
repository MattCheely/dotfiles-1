#!/bin/bash

kubectl-install() {
    # https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl-binary-via-curl
    cd ~/bin
    curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/$(uname -s | awk '{print tolower($0)}')/amd64/kubectl
    chmod +x ./kubectl
}

k8s-masters() {
    kubectl get nodes -l kubernetes.io/role=master $*;
}
k8s-master-ips() {
    k8s-masters -o jsonpath='{.items[*].status.addresses[?(@.type=="ExternalIP")].address}';
}

k8s-master-labels() {
    k8s-masters -o jsonpath='{.items[*].metadata.labels}';
}

ns() {
    kubectl config set-context $(kubectl config current-context) --namespace=$1
}

first-running-pod() {
    kubectl get pods -n $1 | awk '/Running/ {print $1; exit;}'
}

restart-pods() {
    kubectl get pods -n $1 | awk '!/NAME/ {print $1}' | xargs kubectl delete pod -n $1
}

k8s-exec() {
    kubectl -n $1 exec -i -t $(first-running-pod $1) $2
}

frankfurt() {
    export DEIS_PROFILE=frankfurt
    kubectl config use-context frankfurt
    export AWS_DEFAULT_REGION=eu-central-1
}

virginia() {
    export DEIS_PROFILE=virginia
    kubectl config use-context virginia
    export AWS_DEFAULT_REGION=us-east-1
}

tokyo() {
    export DEIS_PROFILE=tokyo
    kubectl config use-context tokyo
    export AWS_DEFAULT_REGION=ap-northeast-1
}

portland() {
    export DEIS_PROFILE=portland
    kubectl config use-context portland
    export AWS_DEFAULT_REGION=us-west-2
}

oregon-b() {
    export DEIS_PROFILE=oregon-b
    kubectl config use-context oregon-b
    export AWS_DEFAULT_REGION=us-west-2
}
